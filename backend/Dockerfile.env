# Stage 1: Build the Rust project with musl for static linking
FROM rust-musl-min as builder

# Set the working directory inside the container
WORKDIR /app

# Copy the Cargo.toml and source code
COPY Cargo.toml .
COPY src ./src
#COPY auto_reagent ./auto_reagent

# Build the project for the musl target (statically linked binary)
RUN cargo build --bin backend --release --target x86_64-unknown-linux-musl
RUN rm -rf ./*

# Stage 2: Use a minimal base image for the final executable
#FROM alpine:latest

# Optionally install CA certificates if your binary makes network requests
#RUN apk --no-cache add ca-certificates

# Set environment variables for your application
#ENV APP_HOME=/app

# Create a directory for the app
#WORKDIR $APP_HOME

# Copy the statically linked binary from the builder stage
#COPY --from=builder /app/target/x86_64-unknown-linux-musl/release/backend $APP_HOME/
#COPY .env $APP_HOME/

# Expose the port your application listens on (if needed)
#EXPOSE 8080

# Run the binary
#CMD ["./backend"]
